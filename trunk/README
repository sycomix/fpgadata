2017-04-22
		fpgadata -- FPGA to Raspberry Pi Data Transfer
		----------------------------------------------

Revision control:  git

This is the "fpgadata" tool.
Runs on Raspberry Pi (RPi) to transfer data from an FPGA connected to
the RPi GPIO pins.
Motivation from CSU Jesse Wilson.


Files:  (2017-11-12)
------
README			this file

doc/		    Documentation
    architecture.text	Architecture description
    gpio_connect.text	fpgadata  GPIO Connection Wiring
    hardware.text	Hardware Components used
    rpixel.text		rpixel  Connection and User Guide

? man/man1/		Manpage dir tree (unmanaged)

image/		    Image generation scripts
    palette/	    Color palette files
	cubeYF.rgb
	cubeYF_clip.rgb
		    Main programs
    coeff2stream	Convert rpixel coefficient data into an image stream.
    countpix		Count pixels on each scan line.
    fakedata		Generate fake pixel data.
    rpix_stream		Convert rpixel coefficient data into an image stream.
    simage		Stream data into an image display.
		    Perl modules, mostly used by simage
    Error_mixi.pm	Error handling mix-in functions.
    ImStream.pm		Image Stream data.
    ImTop.pm		Top-level Stream data into an image.

src/		    Source code, mostly C++
    README
    Makefile		for building the tool
    ...			(see src/README)

bin/		    Commands
    fpgadata		Get FPGA Data.
    rpixel		Get FPGA Data, pixel signals.
		    Symlinks for other commands
    coeff2stream	Convert rpixel coefficient data into an image stream.
    plotc16		Plot FPGA filter coefficients.
    plotc16loop		Live Plot of FPGA filter coefficients.
    rpix_stream		(obsolete)
    rpixel.pod		rpixel manpage (found by being next to rpixel).
    rpixel_init		Initialize Raspberry Pi gpio for use with rpixel.
    runplots		Run rpixel with plotc16loop.
    simage		Stream data into an image display.

obj/		    temporary .o object files
    *.o

test/		    Testing
    Makefile		Run all tests
    t_*/		Test suites


Initial Build process:
----------------------

0)  Set up build directories (only in a new working copy).
    % cd src
    % make mkdirs
    % make compile

The idea is to build/run in the source directory tree, thus avoiding need for
any package/install process.

The bin/ dirctory aggregates all commands with symlinks (so it does not
contain any sources), making it easy to add to $PATH.


Primary developers:
-------------------
    William.Hudson542@gmail.com

